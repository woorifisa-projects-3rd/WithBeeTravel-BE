name: Java CI with Gradle

on:
  push:
    branches:
      - dev_cd  # dev_cd 브랜치에 푸시될 때만 실행
  pull_request:
    branches:
      - dev_cd  # dev_cd 브랜치로의 PR이 생성되면 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 소스 코드 체크아웃
      - uses: actions/checkout@v4

      # JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 설치
      - name: Setup Gradle
        uses: gradle/setup-gradle@v2  # gradle/setup-gradle 액션을 사용

      # Gradle 빌드
      - name: Build with Gradle Wrapper
        run: ./gradlew build
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver  # 필요시 추가

      # 테스트 실행
      - name: Run tests
        run: ./gradlew test
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver  # 필요시 추가
